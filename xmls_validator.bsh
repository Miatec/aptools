#!/bin/bash

# Miatec - 11/12/19
# This script check every xml file in the working directory (or the one in parameter)
# The incorrect files names are stored in bad_xml_files.txt


# Variables definitions
ROOT_PATH=$1
tmp_xml_list_file=./tmp_xml_list_file.txt
tmp_xmllintres_file=./xmllint.tmp.res
output_bad_xml_files=./bad_xml_files.txt


# Handling argument
if test $1 = ""
then
	ROOT_PATH=./
fi

cd $ROOT_PATH

# (Re)initialisation of the result file
rm $output_bad_xml_files
echo "# File generated by $0" >> $output_bad_xml_files
echo "# It contains all the invalid files found in $(dirname $ROOT_PATH)" >> $output_bad_xml_files
echo ""






# Get xml file list
find $ROOT_PATH -name "*.xml" > $tmp_xml_list_file


# for each xml file, check it, then store the name if there is a problem
while read oneXmlFile
do
	xmllint $oneXmlFile > $tmp_xmllintres_file
	if test $? -eq 0
	then
		# No problem
		useless=true
	else
		echo "$oneXmlFile cannot parse"
		#cat $tmp_xmllintres_file
		echo "$oneXmlFile" >> $output_bad_xml_files
	fi


	rm $tmp_xmllintres_file
done < $tmp_xml_list_file
rm $tmp_xml_list_file



# Check the result file to print a summary to the user.
nbLines=$(wc -l $output_bad_xml_files | cut -d' ' -f1)
if test "$nbLines" = "0"
then
	echo "All xml files in $ROOT_PATH are valid"
else
	echo "[ERRORS] $nbLines xml files in $ROOT_PATH are invalid"
	echo "open $(realpath $output_bad_xml_files) to see the list of invalid xml files."
fi


cd -

exit $nbLines
